package com.javainuse.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.javainuse.repository.BookRepository;

import javax.websocket.server.PathParam;

import com.javainuse.model.Book;

@Controller // This means that this class is a Controller
@RequestMapping(path="/book") // This means URL's start with /demo (after Application path)
public class BookController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private BookRepository bookRepository;

  @CrossOrigin(origins = "*")
  @PostMapping(path="/add") // Map ONLY POST Requests
  public @ResponseBody String addNewUser (
      @RequestParam String title, 
      @RequestParam String synopsis,
      @RequestParam String cover,
      @RequestParam String publicationDate
    ) {
    // @ResponseBody means the returned String is the response, not a view name

    Book n = new Book();
    n.setTitle(title);
    n.setSynopsis(synopsis);
    n.setcCover(cover);
    n.setPublicationDate(publicationDate);
    bookRepository.save(n);
    return "Saved";
  }
  
  @CrossOrigin(origins = "*")
  @GetMapping(path="/all")
  public @ResponseBody Iterable<Book> getAllBooks() {
    // This returns a JSON or XML with the users
    return bookRepository.findAll();
  }

  @CrossOrigin(origins = "*")
  @GetMapping(path="/{id}")
  public @ResponseBody Book getBook(
    @PathVariable(value = "id") Integer id
  ) {
    // This returns a JSON or XML with the users
    return bookRepository.findById(id).get();
  }
}